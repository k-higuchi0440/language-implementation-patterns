package pattern.symboltable

/**
  * パターン17: 入れ子スコープのための記号表
  *
  * "本パターンは、複数スコープを持つ言語や場合によっては
  *  入れ子のスコープを持つ言語のために記号を記録してスコープ木を構築します"
  *
  * ファイルの開始 : GlobalScopeを積み上げます。int、float、voidのそれぞれを表す
  *                  BuiltinTypeSymbolオブジェクトを定義します
  * 宣言x          : s（もしあれば）xの型を参照します。現スコープの中でxを定義します
  * メソッドfの宣言: fの戻り値を参照します。現スコープの中でfを定義して、現スコープのとして積み上げます
  * {              : LocalScopeを新しい現スコープとして積み上げます
  * }              : スコープを取り外して、前のスコープを現スコープとして露出します
  * メソッドの終了 : MethodSymbolスコープ（メソッド引数）を取り外します
  * 参照x          : 最初は現スコープの中でxを参照します。見つからなかった場合は、（もし外包スコープがあれば）
  *                  1つ外側の外包スコープの中を探します
  * ファイルの終了 : GlobalScopeを取り外します
  *
  */
package object pattern17_nestedscopes