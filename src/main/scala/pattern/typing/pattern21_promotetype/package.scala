package pattern.typing

/**
  * パターン21: 自動型昇格
  *
  * "本パターンは、算術型の被演算数を自動的かつ安全に昇格する方法を説明します"
  *
  * "自動型昇格の目的とは、1つの演算のすべての被演算数を同じ型か互換性のある型に揃えることです。
  *  これは、計算機のCPUの命令が被演算数に対してそうあることを求めるからです"
  *
  * "言語アプリケーションは、情報を失わない限り、好きなようにある型を別の型へと変換できます(略)
  *  このような自動変換を昇格（promotion）と言います。
  *  型を広げることは問題なくできますが、汎用的な方法で型を狭めることはできないからです"
  *
  * 実装
  *
  * "コンパイラ内の意味解析器は、静的解析器を使ってどの要素と部分式を昇格すべきかを導き出します。
  *  普通は、これらの解析器が中間表現木を変更して値昇格ノードを組み込みます"
  * -> パス1
  *
  * "変換器は、大抵、後でコードを生成するときに木へ注釈付けをして昇格をするだけで大丈夫です。
  *  こうした方が、木を変更するよりもはるかに簡単です"
  * -> パス2
  *
  */
package object pattern21_promotetype